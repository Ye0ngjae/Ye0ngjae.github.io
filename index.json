[{"content":"DB에서의 사용자 권한 관리 DB에서의 사용자 관리는 데이터베이스의 보안과 운영에 중요한 역할을 한다. 적절한 권한 관리를 통하여 데이터의 무결성을 유지하고, 불필요한 접근을 제한할 수 있다.\nDB를 처음 설치하고 접속할 경우 기본적으로 주어지는 계정은 root 계정이기 때문에, 이를 그대로 서비스 운영에 사용하는 것은 보안상 매우 위험한 선택이 될 수 있다. 따라서, 개발자는 서비스 별로 적절한 권한을 가진 사용자를 생성하여 사용하는 것이 보안적인 측면에서 바람직하다.\n사용자 생성 권한을 부여하기에 앞서 사용자를 생성해야 한다. 사용자를 생성하는 방법은 다음과 같다.\nCREATE USER \u0026#39;사용자명\u0026#39;@\u0026#39;호스트\u0026#39; IDENTIFIED BY \u0026#39;비밀번호\u0026#39;; 사용자명: 사용자명 호스트: 접속을 허용할 호스트 비밀번호: 비밀번호 기본적인 구성은 위와 같으며, 사용자명과 호스트는 필수로 입력해야 한다. 비밀번호는 선택적으로 입력할 수 있다. 만약 비밀번호를 입력하지 않을 경우, 사용자 생성 후에 비밀번호를 설정할 수 있다.\n//ex1) 내부 접근을 허용하는 사용자 추가 create user \u0026#39;test\u0026#39;@\u0026#39;localhost\u0026#39; identified by \u0026#39;0000\u0026#39;; //ex2) 외부 접근을 허용하는 사용자 추가 create user \u0026#39;test\u0026#39;@\u0026#39;%\u0026#39; identified by \u0026#39;0000\u0026#39;; //ex3) 특정 ip만 접근을 허용하는 사용자 추가 create user \u0026#39;test\u0026#39;@\u0026#39;123.456.789.100\u0026#39; identified by \u0026#39;0000\u0026#39;; //ex4) 특정 ip 대역을 허용하는 사용자 추가 create user \u0026#39;test\u0026#39;@\u0026#39;192.168.%\u0026#39; identified by \u0026#39;0000\u0026#39;; 위는 사용자를 생성하는 예시이다.\n사용자 삭제 위 방법으로 생성한 사용자를 삭제하는 명령어는 다음과 같다.\nDROP USER \u0026#39;사용자명\u0026#39;; // 혹은 DROP USER \u0026#39;사용자명\u0026#39;@\u0026#39;호스트\u0026#39;; 사용자명: 사용자명 호스트: 접속을 허용한 호스트 권한 부여 사용자에게 권한을 부여하는 방법은 다음과 같다.\nGRANT 권한 ON 데이터베이스.테이블 TO \u0026#39;사용자명\u0026#39;@\u0026#39;호스트\u0026#39;; 권한: 사용자에게 부여할 권한(SELECT,INSERT,UPDATE,DELETE 등) 데이터베이스: 권한을 부여할 데이터베이스 테이블: 권한을 부여할 테이블 사용자명: 권한을 부여할 사용자 호스트: 권한을 부여할 호스트 // 모든 데이터베이스의 모든 테이블에 모든 권한을 줌 grant all privileges on *.* to \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 모든 테이블에 모든 권한을 줌 grant all privileges on DB이름.* to \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블에 모든 권한을 줌 grant all privileges on DB이름.테이블명 to \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블에 select 권한을 줌 grant select on DB이름.테이블명 to \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블에 select, insert 권한을 줌 grant select, insert on DB이름.테이블명 to \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블의 컬럼1과 컬럼2의 update 권한을 줌 grant update(컬럼1, 컬럼2) on DB이름.테이블명 to \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; 권한 취소 만일 사용자에게 부여해야 하는 권한보다 더 많은 권한을 부여했을 경우, 권한을 취소할 수 있다.\nREVOKE 권한 ON 데이터베이스.테이블 FROM \u0026#39;사용자명\u0026#39;@\u0026#39;호스트\u0026#39;; 권한: 취소할 권한 데이터베이스: 권한을 취소할 데이터베이스 테이블: 권한을 취소할 테이블 사용자명: 권한을 취소할 사용자 호스트: 권한을 취소할 호스트 // 모든 데이터베이스의 모든 테이블에 대한 모든 권한을 회수 revoke all privileges on *.* from \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 모든 테이블에 대한 모든 권한을 회수 revoke all privileges on DB이름.* from \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블에 대한 모든 권한을 회수 revoke all privileges on DB이름.테이블명 from \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블에 대한 select 권한을 회수 revoke select on DB이름.테이블명 from \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블에 대한 select, insert 권한을 회수 revoke select, insert on DB이름.테이블명 from \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; // 특정 데이터베이스의 특정 테이블의 컬럼1과 컬럼2에 대한 update 권한을 회수 revoke update(컬럼1, 컬럼2) on DB이름.테이블명 from \u0026#39;사용자\u0026#39;@\u0026#39;localhost\u0026#39;; 권한 확인 사용자에게 부여된 권한을 확인하는 방법은 다음과 같다.\nSHOW GRANTS FOR \u0026#39;사용자명\u0026#39;@\u0026#39;호스트\u0026#39;; 사용자명: 권한을 확인할 사용자 호스트: 권한을 확인할 호스트 DB 반영 권한을 부여하거나 취소한 후에는 FLUSH PRIVILEGES; 명령어를 통해 변경사항을 DB에 반영해야 한다.\nFLUSH PRIVILEGES; ","permalink":"https://ye0ngjae.blog/blog/2024-08-20-/","summary":"DB에서의 사용자 권한 관리 DB에서의 사용자 관리는 데이터베이스의 보안과 운영에 중요한 역할을 한다. 적절한 권한 관리를 통하여 데이터의 무결성을 유지하고, 불필요한 접근을 제한할 수 있다.\nDB를 처음 설치하고 접속할 경우 기본적으로 주어지는 계정은 root 계정이기 때문에, 이를 그대로 서비스 운영에 사용하는 것은 보안상 매우 위험한 선택이 될 수 있다. 따라서, 개발자는 서비스 별로 적절한 권한을 가진 사용자를 생성하여 사용하는 것이 보안적인 측면에서 바람직하다.\n사용자 생성 권한을 부여하기에 앞서 사용자를 생성해야 한다.","title":"[SQL] DB에서의 사용자 권한 관리"},{"content":"문제 절댓값 힙은 다음과 같은 연산을 지원하는 자료구조이다.\n배열에 정수 x (x ≠ 0)를 넣는다. 배열에서 절댓값이 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다. 절댓값이 가장 작은 값이 여러개일 때는, 가장 작은 수를 출력하고, 그 값을 배열에서 제거한다. 프로그램은 처음에 비어있는 배열에서 시작하게 된다. 입력 첫째 줄에 연산의 개수 N(1≤N≤100,000)이 주어진다. 다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 만약 x가 0이 아니라면 배열에 x라는 값을 넣는(추가하는) 연산이고, x가 0이라면 배열에서 절댓값이 가장 작은 값을 출력하고 그 값을 배열에서 제거하는 경우이다. 입력되는 정수는 $$ -2^31 $$보다 크고, $$ 2^31 $$보다 작다.\n출력 입력에서 0이 주어진 회수만큼 답을 출력한다. 만약 배열이 비어 있는 경우인데 절댓값이 가장 작은 값을 출력하라고 한 경우에는 0을 출력하면 된다.\n예제 입력 1 18 1 -1 0 0 0 1 1 -1 -1 2 -2 0 0 0 0 0 0 0 예제 출력 1 -1 1 0 -1 -1 1 1 -2 2 0 풀이 heapq 모듈을 사용하여 풀이한다. heapq 모듈은 최소 힙을 지원한다. 절대값을 기준으로 최소 힙을 구현하기 위해 (abs(x), x)를 힙에 넣는다. x가 0이면 힙이 비어있지 않다면 절대값이 가장 작은 값을 출력하고, 그 값을 힙에서 제거한다. x가 0이 아니면 (abs(x), x)를 힙에 넣는다. import heapq import sys heap = [] N = int(sys.stdin.readline().strip()) for _ in range(N): x = int(sys.stdin.readline().strip()) if x == 0: if heap: print(heapq.heappop(heap)[1]) else: print(0) else: heapq.heappush(heap, (abs(x), x)) ","permalink":"https://ye0ngjae.blog/blog/2024-06-28-%EC%A0%88%EB%8C%80%EA%B0%92%ED%9E%99/","summary":"문제 절댓값 힙은 다음과 같은 연산을 지원하는 자료구조이다.\n배열에 정수 x (x ≠ 0)를 넣는다. 배열에서 절댓값이 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다. 절댓값이 가장 작은 값이 여러개일 때는, 가장 작은 수를 출력하고, 그 값을 배열에서 제거한다. 프로그램은 처음에 비어있는 배열에서 시작하게 된다. 입력 첫째 줄에 연산의 개수 N(1≤N≤100,000)이 주어진다. 다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 만약 x가 0이 아니라면 배열에 x라는 값을 넣는(추가하는) 연산이고, x가 0이라면 배열에서 절댓값이 가장 작은 값을 출력하고 그 값을 배열에서 제거하는 경우이다.","title":"[알고리즘] 절대값 힙 파이썬 풀이"},{"content":"문제 한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.\n입력 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다. 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.\n출력 첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.\n예제 입력 1 11 1 4 3 5 0 6 5 7 3 8 5 9 6 10 8 11 8 12 2 13 12 14 예제 출력 1 4 풀이 회의가 끝나는 시간을 기준으로 정렬한다. 회의가 끝나는 시간이 같다면 시작하는 시간을 기준으로 정렬한다. 회의가 끝나는 시간이 가장 빠른 회의부터 시작한다. 회의가 끝나는 시간이 같다면 시작하는 시간이 가장 빠른 회의부터 시작한다. 회의가 끝나는 시간이 같고 시작하는 시간이 같다면 회의 번호가 작은 회의부터 시작한다. import sys arr = [] count = 1 tmp = 0 T = int(sys.stdin.readline()) for i in range(T): a,b = map(int, sys.stdin.readline().split()) arr.append([a,b]) arr.sort(key=lambda x: (x[1], x[0])) tmp = arr[0][1] for i in range(1,T): if tmp \u0026lt;= arr[i][0]: count += 1 tmp = arr[i][1] else: continue print(count) ","permalink":"https://ye0ngjae.blog/blog/2024-06-28-%ED%9A%8C%EC%9D%98%EC%8B%A4%EB%B0%B0%EC%A0%95/","summary":"문제 한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.\n입력 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다.","title":"[알고리즘] 회의실 배정 파이썬 풀이"},{"content":"Profile 남영재 / 2006.03.25\nOrganization Sunrin Internet High School InfoSec 117th Layer7 Hacking Club Activity 서울여자대학교 정보보호영재교육원 8기(2021.03 ~ 2021.12) 서울여자대학교 정보보호영재교육원 9기(2022.03 ~ 2022.12) 개인정보보호위원회 청소년개인정보보호리더 1기(2022.05 ~ 2022.12) Award 2024\n2024 D-Camp 청소년 창업경진대회 최우수상 2023\n선린인터넷고등학교 교내 창의아이디어 경진대회 대상 2022\n2022 임베디드 소프트웨어 경진대회 우수상 서울여자대학교 정보보호영재교육원 정보보안 경진대회 우수상 선린인터넷고등학교 교내 LogCon CTF 동상 선린인터넷고등학교 교내 디지털콘텐츠디자인대회 우수상 선린인터넷고등학교 교내 고등해커 CTF 은상 2021\n2021 인천 학생 해커톤 인천광역시교육감상 2020\n한세사이버보안고등학교 중학생 정보보안 콘테스트 동상 2020 학생 창의력 챔피언 대회 은상 ","permalink":"https://ye0ngjae.blog/about/","summary":"About me","title":"About me"}]