<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Design Pattern on Ye0ngjae</title>
    <link>https://ye0ngjae.blog/categories/design-pattern/</link>
    <description>Recent content in Design Pattern on Ye0ngjae</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ye0ngjae.blog/categories/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Architecture] Layered &amp; Multitier Architecture</title>
      <link>https://ye0ngjae.blog/blog/2024-08-20-ntierarchitecture/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-08-20-ntierarchitecture/</guid>
      <description>Layered Architecture 소프트웨어 시스템을 여러 계층으로 나누어 구성하는 아키텍처 스타일이다. 3 계층 구조(3 Tier Architecture)가 대표적이며, 표현 계층, 애플리케이션 계층, 데이터 계층으로 나뉜다.시스템의 모듈화와 유지 보수성을 높이기 위해 사용된다.
3 계층 구조의 구성 요소 표현 계층(Presentation Layer) 사용자와 직접 상호 작용하는 계층으로, 사용자 인터페이스를 담당한다. 정보를 표시하고 사용자 입력을 받아들인다. 애플리케이션 계층(Application Layer) / 서비스의 주 로직이 구현되어 있는 계층이다. 비즈니스 로직을 처리하고 요청을 조정한다. 데이터 계층(Data Layer) 데이터베이스와 상호 작용하는 계층이다.</description>
    </item>
    
  </channel>
</rss>
