<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blogs on Ye0ngjae</title>
    <link>https://ye0ngjae.blog/blog/</link>
    <description>Recent content in Blogs on Ye0ngjae</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ye0ngjae.blog/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Architecture] MVC Architecture</title>
      <link>https://ye0ngjae.blog/blog/2024-08-21-mvcarchitecture/</link>
      <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-08-21-mvcarchitecture/</guid>
      <description>MVC 아키텍처 MVC (Model-View-Controller)는 사용자 인터페이스를 개발할 때 자주 사용되는 디자인 패턴으로, 애플리케이션을 세 가지 상호 연결된 컴포넌트로 나눈다.
모델 (Model) 모델 컴포넌트는 사용자가 작업하는 모든 데이터 관련 로직에 해당한다. 이는 뷰와 컨트롤러 컴포넌트 간에 전송되는 데이터나 기타 비즈니스 로직 관련 데이터를 나타낼 수 있다.
예시: 고객 객체는 데이터베이스에서 고객 정보를 검색하고, 이를 조작하여 다시 데이터베이스에 업데이트하거나 데이터를 렌더링하는 데 사용한다.
뷰 (View) 뷰 컴포넌트는 애플리케이션의 모든 UI 로직에 사용된다. 이는 모델에 포함된 데이터의 시각화를 나타낸다.</description>
    </item>
    
    <item>
      <title>[Architecture] Layered &amp; Multitier Architecture</title>
      <link>https://ye0ngjae.blog/blog/2024-08-20-ntierarchitecture/</link>
      <pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-08-20-ntierarchitecture/</guid>
      <description>Layered Architecture 소프트웨어 시스템을 여러 계층으로 나누어 구성하는 아키텍처 스타일이다. 3 계층 구조(3 Tier Architecture)가 대표적이며, 표현 계층, 애플리케이션 계층, 데이터 계층으로 나뉜다.시스템의 모듈화와 유지 보수성을 높이기 위해 사용된다.
3 계층 구조의 구성 요소 표현 계층(Presentation Layer) 사용자와 직접 상호 작용하는 계층으로, 사용자 인터페이스를 담당한다. 정보를 표시하고 사용자 입력을 받아들인다. 애플리케이션 계층(Application Layer) / 서비스의 주 로직이 구현되어 있는 계층이다. 비즈니스 로직을 처리하고 요청을 조정한다. 데이터 계층(Data Layer) 데이터베이스와 상호 작용하는 계층이다.</description>
    </item>
    
    <item>
      <title>[SQL] DB에서의 사용자 권한 관리</title>
      <link>https://ye0ngjae.blog/blog/2024-08-20-db%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B6%8C%ED%95%9C%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-08-20-db%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B6%8C%ED%95%9C%EA%B4%80%EB%A6%AC/</guid>
      <description>DB에서의 사용자 권한 관리 DB에서의 사용자 관리는 데이터베이스의 보안과 운영에 중요한 역할을 한다. 적절한 권한 관리를 통하여 데이터의 무결성을 유지하고, 불필요한 접근을 제한할 수 있다.
DB를 처음 설치하고 접속할 경우 기본적으로 주어지는 계정은 root 계정이기 때문에, 이를 그대로 서비스 운영에 사용하는 것은 보안상 매우 위험한 선택이 될 수 있다. 따라서, 개발자는 서비스 별로 적절한 권한을 가진 사용자를 생성하여 사용하는 것이 보안적인 측면에서 바람직하다.
사용자 생성 권한을 부여하기에 앞서 사용자를 생성해야 한다.</description>
    </item>
    
    <item>
      <title>[알고리즘] 백준 11286번 절대값 힙(Python)</title>
      <link>https://ye0ngjae.blog/blog/2024-06-28-%EC%A0%88%EB%8C%80%EA%B0%92%ED%9E%99/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-06-28-%EC%A0%88%EB%8C%80%EA%B0%92%ED%9E%99/</guid>
      <description>문제 절댓값 힙은 다음과 같은 연산을 지원하는 자료구조이다.
배열에 정수 x (x ≠ 0)를 넣는다. 배열에서 절댓값이 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다. 절댓값이 가장 작은 값이 여러개일 때는, 가장 작은 수를 출력하고, 그 값을 배열에서 제거한다. 프로그램은 처음에 비어있는 배열에서 시작하게 된다. 입력 첫째 줄에 연산의 개수 N(1≤N≤100,000)이 주어진다. 다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 만약 x가 0이 아니라면 배열에 x라는 값을 넣는(추가하는) 연산이고, x가 0이라면 배열에서 절댓값이 가장 작은 값을 출력하고 그 값을 배열에서 제거하는 경우이다.</description>
    </item>
    
    <item>
      <title>[알고리즘] 백준 1931번 회의실 배정(Python)</title>
      <link>https://ye0ngjae.blog/blog/2024-06-28-%ED%9A%8C%EC%9D%98%EC%8B%A4%EB%B0%B0%EC%A0%95/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-06-28-%ED%9A%8C%EC%9D%98%EC%8B%A4%EB%B0%B0%EC%A0%95/</guid>
      <description>문제 한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.
입력 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다.</description>
    </item>
    
  </channel>
</rss>
