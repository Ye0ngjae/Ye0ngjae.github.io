<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Model-View-Controller on Ye0ngjae</title>
    <link>https://ye0ngjae.blog/tags/model-view-controller/</link>
    <description>Recent content in Model-View-Controller on Ye0ngjae</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ye0ngjae.blog/tags/model-view-controller/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Architecture] MVC Architecture</title>
      <link>https://ye0ngjae.blog/blog/2024-08-21-mvcarchitecture/</link>
      <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ye0ngjae.blog/blog/2024-08-21-mvcarchitecture/</guid>
      <description>MVC 아키텍처 MVC (Model-View-Controller)는 사용자 인터페이스를 개발할 때 자주 사용되는 디자인 패턴으로, 애플리케이션을 세 가지 상호 연결된 컴포넌트로 나눈다.
모델 (Model) 모델 컴포넌트는 사용자가 작업하는 모든 데이터 관련 로직에 해당한다. 이는 뷰와 컨트롤러 컴포넌트 간에 전송되는 데이터나 기타 비즈니스 로직 관련 데이터를 나타낼 수 있다.
예시: 고객 객체는 데이터베이스에서 고객 정보를 검색하고, 이를 조작하여 다시 데이터베이스에 업데이트하거나 데이터를 렌더링하는 데 사용한다.
뷰 (View) 뷰 컴포넌트는 애플리케이션의 모든 UI 로직에 사용된다. 이는 모델에 포함된 데이터의 시각화를 나타낸다.</description>
    </item>
    
  </channel>
</rss>
